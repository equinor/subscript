name: subscript

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  schedule:
    # Run CI every night and check that tests are working with latest dependencies
    - cron:  '0 0 * * *'

env:
  MPLBACKEND: Agg

jobs:

  subscript:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']

    steps:
      - name: Checkout commit locally
        uses: actions/checkout@v2

      - name: Checkout tags
        # This seems necessary for setuptools_scm to be able to infer
        # the correct version.
        run: git fetch --unshallow --tags

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check code style
        run: |
          pip install black
          black --check *.py src tests
          pip install flake8
          flake8 src tests

      - name: Install OPM-flow and ResInsight (for testing)
        run: |
          sudo apt-get install software-properties-common
          sudo apt-add-repository ppa:opm/ppa
          sudo apt-get update
          sudo apt-get install mpi-default-bin
          sudo apt-get install libopm-simulators-bin
          sudo apt-get install resinsight

      - name: Install subscript with dependencies
        run: |
          pip install --upgrade pip
          pip install .[tests,docs]

      - name: List all installed packages
        run: pip freeze

      - name: Run tests
        run: |
          pytest tests
          # Check that repository is untainted by test code:
          git status --porcelain
          test -z "$(git status --porcelain)"

      - name: Syntax check documentation
        run: rstcheck -r docs

      - name: Build documentation
        run: python setup.py build_sphinx

      - name: Update GitHub pages
        if: github.repository_owner == 'equinor' && github.ref == 'refs/heads/master' && matrix.python-version == '3.6'
        run: |
            cp -R ./build/sphinx/html ../html

            git config --local user.email "subscript-github-action"
            git config --local user.name "subscript-github-action"
            git fetch origin gh-pages
            git checkout --track origin/gh-pages
            git clean -f -f -d -x  # Double -f is intentional
            git rm -r *

            cp -R ../html/* .
            touch .nojekyll  # If not, github pages ignores _* directories.
            git add .

            if git diff-index --quiet HEAD; then
              echo "No changes in documentation. Skip documentation deploy."
            else
              git commit -m "Update Github Pages"
              git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
            fi
