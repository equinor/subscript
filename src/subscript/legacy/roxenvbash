#!/bin/bash
# Set up a bash environment with license to RMS, so it can be possible to access ROXAPI
# from the command line
#
# e.g.: roxenvbash 10.0.2
#
# For RMS version under testing, use roxenbash TEST
# However, you need to set the following ENV variable in advance, .e.g:
# ROXENVBASHTEST=12.0.0 source roxenvbash TEST
# JRIV to blame

theARCH=`uname -m`
theARCHOS_ID=$theARCH
theRH_RELEASE=`$SDP_BINDIST_ROOT/get_os_version`
theRH_RELEASE="${theRH_RELEASE##*$'\n'}"
PLATFORM="${theARCH}_RH_${theRH_RELEASE}"


# Colors!
red="\[\033[1;31m\]"
RED="\033[1;31m"
green="\[\033[0;32m\]"
GREEN="\033[0;32m"
yellow="\[\033[1;33m\]"
blue="\[\033[1;34m\]"
BLUE="\033[1;34m"
magenta="\[\033[1;35m\]"
cyan="\[\033[1;36m\]"
white="\[\033[0;37m\]"
end="\[\033[0m\]" # This is needed at the end... :(
END="\033[0m" # This is needed at the end... :(

echo -e "${GREEN}"
cat << EOF

Usage: roxenvbash <RMSVERSION>, e.g.: roxenvbash 10.1.1
or
ROXENVBASHTEST=12.0.0 roxenvbash TEST (for beta/dev versions)

EOF

echo -e "${END}"


if [ "$#" -eq 1 ]; then
    RMSGETVER=$1
    echo "RMS version from command line is $RMSGETVER"
fi

export LM_LICENSE_FILE="/prog/roxar/licensing/geomaticLM.lic:2021@st-vlic02.st.statoil.no"

RMSDEFAULT=$(rms -v | grep default | perl -ne "s/^\s+//; @x = split; print(@x[0])")

echo "Set env variable RMSVER for RMS version... (default is $RMSDEFAULT)"

if [[ -z "${RMSGETVER}" ]]; then
    RMSGETVER=$RMSDEFAULT
    echo "Set env variable RMSVER from default as $RMSDEFAULT)"
fi

RMSVER=$RMSGETVER

if [[ "${RMSGETVER}" == "TEST" ]]; then
    if [[ -z "${ROXENVBASHTEST}" ]]; then
        echo -e "${RED}"
        echo "ERROR, you are using TEST, but ROXENVBASHTEST env variable is not set."
        echo "E.g. in shell PRIOR to this script: export ROXENVBASHTEST=12.0.0"
        echo -e "${END}"
        return
    else
        RMSVER=$ROXENVBASHTEST
    fi
fi

echo -e "${BLUE}RMS version is $RMSVER${END}"

rmsmain=`echo $RMSVER | cut -d. -f1`


PYVER=3.6
if [ "$rmsmain" = "10" ]; then
    PYVER=3.4
fi

echo -e "RMS main version is $rmsmain with Python $PYVER"

unset PS1
export PS1="${green}<bash>${red}[RMS${RMSVER} ${magenta}PY-$PYVER${red}]${blue}\u@\h: \w \$ ${end}"
export ROXENV=$RMSVER
export RMSVER=$RMSVER

unset LD_LIBRARY_PATH
unset LDFLAGS

if [ -z $ORIGPATH ]; then
    echo "Setting ORIGPATH from PATH..."
    ORIGPATH=$PATH
else
    echo "Setting PATH copy from ORIGPATH..."
    PATH=$ORIGPATH
fi

TMPFILE=`mktemp /tmp/XXXXXXXXX.sh`

if [[ ${RMSGETVER} = "TEST" ]]; then
    RUNROXENV=$(find /prog/roxar/site/RMS_test_latest/rms/versions/*/bin/LINUX_64 -name roxenv)
else
    RUNROXENV=$(find /prog/roxar/rms/versions/$RMSVER/bin/LINUX_64 -name roxenv)
fi

echo "================================================================================"
echo $RUNROXENV
echo "================================================================================="

$RUNROXENV --export > $TMPFILE

source $TMPFILE

# target for install of in-house stuff, like XTGeo:
export RMSTARGET=/project/res/roxapi/$PLATFORM/$RMSVER/lib/python$PYVER/site-packages
echo $RMSTARGET
echo "================================================================================="

export PYTHONPATH=/project/res/roxapi/$PLATFORM/$RMSVER/lib/python$PYVER/site-packages:$PYTHONPATH

export PATH=/project/res/roxapi/$PLATFORM/$RMSVER/bin:$PATH

export PYTHONUSERBASE_ROXAR=/project/res/roxapi/$PLATFORM/$RMSVER
